diff a/ServerProject/ServerProject/DatabaseLayer/DBReservation.cs b/ServerProject/ServerProject/DatabaseLayer/DBReservation.cs	(rejected hunks)
@@ -9,6 +9,7 @@
 using System.Data.SqlClient;
 using System.Configuration;
 using System.Threading;
+//using System.Transactions;
 
 namespace ServerProject.DatabaseLayer
 {
@@ -35,26 +36,38 @@
             ConnectToDatabaseDataContext db = new ConnectToDatabaseDataContext();
             db.Connection.Open();
             db.Transaction = db.Connection.BeginTransaction(IsolationLevel.RepeatableRead);
-            Reservation reservation = db.Reservations.First(r => r.CustomerID == res.CustomerID);
-            reservation.Row = res.Row;
-            reservation.SchedulerID = res.SchedulerID;
-            reservation.Seat = res.Seat;
-            reservation.CustomerID = reservation.CustomerID;
-            Console.WriteLine("Thread is now sleeping");
-            try
-            {
-                Thread.Sleep(sleepTime);
-                Console.WriteLine("Thread is now not sleeping");
-                db.SubmitChanges();
-                db.Connection.Close();
+            Reservation reservation = db.Reservations.First(r => r.ResID == 4);
+            
+            //Console.WriteLine(reservation.Row);
+            //using (var transation = new TransactionScope() )
+            //{
 
-            }
-            catch (Exception e)
-            {
-                db.Transaction.Rollback();
-                Console.WriteLine(e);
-            }
+                reservation.CustomerID = 1;
+                reservation.Row = "1,2,3,4";
+                reservation.Seat = "5,5,5,5,1,4,";
+                reservation.SchedulerID = 1;
+                //reservation.ResID = 1;
+
+                Console.WriteLine("Thread is now sleeping");
+                
+                try
+                {
+
+                    Console.WriteLine("Thread is now not sleeping");
+                    db.SubmitChanges();
+                    Thread.Sleep(10000);
+                    db.Transaction.Commit();
+                    db.Transaction.Dispose();
+                    //transation.Complete();
+                    db.Connection.Close();
 
+                }
+                catch (Exception e)
+                {
+                    db.Transaction.Rollback();
+                    Console.WriteLine(e);
+                }
+            //}
         }
 
 
