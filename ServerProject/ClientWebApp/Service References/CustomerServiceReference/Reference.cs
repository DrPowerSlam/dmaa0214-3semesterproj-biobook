//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApp.CustomerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerServiceReference.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSchedulers", ReplyAction="http://tempuri.org/ICustomerService/GetAllSchedulersResponse")]
        ServerProject.DatabaseLayer.Scheduler[] GetAllSchedulers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSchedulers", ReplyAction="http://tempuri.org/ICustomerService/GetAllSchedulersResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler[]> GetAllSchedulersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/getSchedulerByMovie", ReplyAction="http://tempuri.org/ICustomerService/getSchedulerByMovieResponse")]
        ServerProject.DatabaseLayer.Scheduler getSchedulerByMovie(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/getSchedulerByMovie", ReplyAction="http://tempuri.org/ICustomerService/getSchedulerByMovieResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> getSchedulerByMovieAsync(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/getSchedulerByID", ReplyAction="http://tempuri.org/ICustomerService/getSchedulerByIDResponse")]
        ServerProject.DatabaseLayer.Scheduler getSchedulerByID(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/getSchedulerByID", ReplyAction="http://tempuri.org/ICustomerService/getSchedulerByIDResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> getSchedulerByIDAsync(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/makeReservation", ReplyAction="http://tempuri.org/ICustomerService/makeReservationResponse")]
        void makeReservation(string row, string seat, int schedulerID, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/makeReservation", ReplyAction="http://tempuri.org/ICustomerService/makeReservationResponse")]
        System.Threading.Tasks.Task makeReservationAsync(string row, string seat, int schedulerID, int customerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : ClientWebApp.CustomerServiceReference.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<ClientWebApp.CustomerServiceReference.ICustomerService>, ClientWebApp.CustomerServiceReference.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServerProject.DatabaseLayer.Scheduler[] GetAllSchedulers() {
            return base.Channel.GetAllSchedulers();
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler[]> GetAllSchedulersAsync() {
            return base.Channel.GetAllSchedulersAsync();
        }
        
        public ServerProject.DatabaseLayer.Scheduler getSchedulerByMovie(int movieID) {
            return base.Channel.getSchedulerByMovie(movieID);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> getSchedulerByMovieAsync(int movieID) {
            return base.Channel.getSchedulerByMovieAsync(movieID);
        }
        
        public ServerProject.DatabaseLayer.Scheduler getSchedulerByID(int schedulerID) {
            return base.Channel.getSchedulerByID(schedulerID);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> getSchedulerByIDAsync(int schedulerID) {
            return base.Channel.getSchedulerByIDAsync(schedulerID);
        }
        
        public void makeReservation(string row, string seat, int schedulerID, int customerID) {
            base.Channel.makeReservation(row, seat, schedulerID, customerID);
        }
        
        public System.Threading.Tasks.Task makeReservationAsync(string row, string seat, int schedulerID, int customerID) {
            return base.Channel.makeReservationAsync(row, seat, schedulerID, customerID);
        }
    }
}
