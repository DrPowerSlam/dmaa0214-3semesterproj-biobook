//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApp.CustomerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerServiceReference.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByEmail", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByEmailResponse")]
        ServerProject.DatabaseLayer.Customer GetCustomerByEmail(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByEmail", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByEmailResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByEmailAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSeatsBySchedulerID", ReplyAction="http://tempuri.org/ICustomerService/GetAllSeatsBySchedulerIDResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Seat> GetAllSeatsBySchedulerID(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSeatsBySchedulerID", ReplyAction="http://tempuri.org/ICustomerService/GetAllSeatsBySchedulerIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Seat>> GetAllSeatsBySchedulerIDAsync(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetBestSeats", ReplyAction="http://tempuri.org/ICustomerService/GetBestSeatsResponse")]
        System.Collections.Generic.List<int> GetBestSeats(int amount, int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetBestSeats", ReplyAction="http://tempuri.org/ICustomerService/GetBestSeatsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetBestSeatsAsync(int amount, int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllMovies", ReplyAction="http://tempuri.org/ICustomerService/GetAllMoviesResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Movie> GetAllMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllMovies", ReplyAction="http://tempuri.org/ICustomerService/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Movie>> GetAllMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetReservationByCustomerID", ReplyAction="http://tempuri.org/ICustomerService/GetReservationByCustomerIDResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation> GetReservationByCustomerID(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetReservationByCustomerID", ReplyAction="http://tempuri.org/ICustomerService/GetReservationByCustomerIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation>> GetReservationByCustomerIDAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSchedulers", ReplyAction="http://tempuri.org/ICustomerService/GetAllSchedulersResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetAllSchedulers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllSchedulers", ReplyAction="http://tempuri.org/ICustomerService/GetAllSchedulersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetAllSchedulersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerByMovieID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerByMovieIDResponse")]
        ServerProject.DatabaseLayer.Scheduler GetSchedulerByMovieID(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerByMovieID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerByMovieIDResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> GetSchedulerByMovieIDAsync(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerByID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerByIDResponse")]
        ServerProject.DatabaseLayer.Scheduler GetSchedulerByID(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerByID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerByIDResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> GetSchedulerByIDAsync(int schedulerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeReservation", ReplyAction="http://tempuri.org/ICustomerService/MakeReservationResponse")]
        void MakeReservation(string row, string seat, int schedulerID, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeReservation", ReplyAction="http://tempuri.org/ICustomerService/MakeReservationResponse")]
        System.Threading.Tasks.Task MakeReservationAsync(string row, string seat, int schedulerID, int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeCustomer", ReplyAction="http://tempuri.org/ICustomerService/MakeCustomerResponse")]
        int MakeCustomer(string name, string phoneNumber, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeCustomer", ReplyAction="http://tempuri.org/ICustomerService/MakeCustomerResponse")]
        System.Threading.Tasks.Task<int> MakeCustomerAsync(string name, string phoneNumber, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByID", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIDResponse")]
        ServerProject.DatabaseLayer.Customer GetCustomerByID(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByID", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIDResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByIDAsync(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CustomerLogin", ReplyAction="http://tempuri.org/ICustomerService/CustomerLoginResponse")]
        ServerProject.DatabaseLayer.Customer CustomerLogin(string userMail, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CustomerLogin", ReplyAction="http://tempuri.org/ICustomerService/CustomerLoginResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> CustomerLoginAsync(string userMail, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeScheduler", ReplyAction="http://tempuri.org/ICustomerService/MakeSchedulerResponse")]
        void MakeScheduler(System.DateTime date, System.TimeSpan time, int movieID, int hallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/MakeScheduler", ReplyAction="http://tempuri.org/ICustomerService/MakeSchedulerResponse")]
        System.Threading.Tasks.Task MakeSchedulerAsync(System.DateTime date, System.TimeSpan time, int movieID, int hallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/FindMovieByName", ReplyAction="http://tempuri.org/ICustomerService/FindMovieByNameResponse")]
        ServerProject.DatabaseLayer.Movie FindMovieByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/FindMovieByName", ReplyAction="http://tempuri.org/ICustomerService/FindMovieByNameResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Movie> FindMovieByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerListByMovieID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerListByMovieIDResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetSchedulerListByMovieID(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchedulerListByMovieID", ReplyAction="http://tempuri.org/ICustomerService/GetSchedulerListByMovieIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetSchedulerListByMovieIDAsync(int movieID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllAvailableSeats", ReplyAction="http://tempuri.org/ICustomerService/GetAllAvailableSeatsResponse")]
        System.Collections.Generic.List<System.Collections.Generic.List<int>> GetAllAvailableSeats(int schID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllAvailableSeats", ReplyAction="http://tempuri.org/ICustomerService/GetAllAvailableSeatsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<int>>> GetAllAvailableSeatsAsync(int schID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByPhone", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByPhoneResponse")]
        ServerProject.DatabaseLayer.Customer GetCustomerByPhone(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerByPhone", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByPhoneResponse")]
        System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByPhoneAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetResByCusPhone", ReplyAction="http://tempuri.org/ICustomerService/GetResByCusPhoneResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation> GetResByCusPhone(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetResByCusPhone", ReplyAction="http://tempuri.org/ICustomerService/GetResByCusPhoneResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation>> GetResByCusPhoneAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        void DeleteCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchListByDate", ReplyAction="http://tempuri.org/ICustomerService/GetSchListByDateResponse")]
        System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetSchListByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetSchListByDate", ReplyAction="http://tempuri.org/ICustomerService/GetSchListByDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetSchListByDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateScheduler", ReplyAction="http://tempuri.org/ICustomerService/UpdateSchedulerResponse")]
        void UpdateScheduler(int schID, System.DateTime date, System.TimeSpan time, int movieID, int hallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateScheduler", ReplyAction="http://tempuri.org/ICustomerService/UpdateSchedulerResponse")]
        System.Threading.Tasks.Task UpdateSchedulerAsync(int schID, System.DateTime date, System.TimeSpan time, int movieID, int hallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        void UpdateCustomer(int customerID, string name, string email, string phone, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(int customerID, string name, string email, string phone, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteSch", ReplyAction="http://tempuri.org/ICustomerService/DeleteSchResponse")]
        void DeleteSch(int schID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteSch", ReplyAction="http://tempuri.org/ICustomerService/DeleteSchResponse")]
        System.Threading.Tasks.Task DeleteSchAsync(int schID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : ClientWebApp.CustomerServiceReference.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<ClientWebApp.CustomerServiceReference.ICustomerService>, ClientWebApp.CustomerServiceReference.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServerProject.DatabaseLayer.Customer GetCustomerByEmail(string username) {
            return base.Channel.GetCustomerByEmail(username);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByEmailAsync(string username) {
            return base.Channel.GetCustomerByEmailAsync(username);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Seat> GetAllSeatsBySchedulerID(int schedulerID) {
            return base.Channel.GetAllSeatsBySchedulerID(schedulerID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Seat>> GetAllSeatsBySchedulerIDAsync(int schedulerID) {
            return base.Channel.GetAllSeatsBySchedulerIDAsync(schedulerID);
        }
        
        public System.Collections.Generic.List<int> GetBestSeats(int amount, int schedulerID) {
            return base.Channel.GetBestSeats(amount, schedulerID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetBestSeatsAsync(int amount, int schedulerID) {
            return base.Channel.GetBestSeatsAsync(amount, schedulerID);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Movie> GetAllMovies() {
            return base.Channel.GetAllMovies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Movie>> GetAllMoviesAsync() {
            return base.Channel.GetAllMoviesAsync();
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation> GetReservationByCustomerID(int customerID) {
            return base.Channel.GetReservationByCustomerID(customerID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation>> GetReservationByCustomerIDAsync(int customerID) {
            return base.Channel.GetReservationByCustomerIDAsync(customerID);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetAllSchedulers() {
            return base.Channel.GetAllSchedulers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetAllSchedulersAsync() {
            return base.Channel.GetAllSchedulersAsync();
        }
        
        public ServerProject.DatabaseLayer.Scheduler GetSchedulerByMovieID(int movieID) {
            return base.Channel.GetSchedulerByMovieID(movieID);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> GetSchedulerByMovieIDAsync(int movieID) {
            return base.Channel.GetSchedulerByMovieIDAsync(movieID);
        }
        
        public ServerProject.DatabaseLayer.Scheduler GetSchedulerByID(int schedulerID) {
            return base.Channel.GetSchedulerByID(schedulerID);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Scheduler> GetSchedulerByIDAsync(int schedulerID) {
            return base.Channel.GetSchedulerByIDAsync(schedulerID);
        }
        
        public void MakeReservation(string row, string seat, int schedulerID, int customerID) {
            base.Channel.MakeReservation(row, seat, schedulerID, customerID);
        }
        
        public System.Threading.Tasks.Task MakeReservationAsync(string row, string seat, int schedulerID, int customerID) {
            return base.Channel.MakeReservationAsync(row, seat, schedulerID, customerID);
        }
        
        public int MakeCustomer(string name, string phoneNumber, string password, string mail) {
            return base.Channel.MakeCustomer(name, phoneNumber, password, mail);
        }
        
        public System.Threading.Tasks.Task<int> MakeCustomerAsync(string name, string phoneNumber, string password, string mail) {
            return base.Channel.MakeCustomerAsync(name, phoneNumber, password, mail);
        }
        
        public ServerProject.DatabaseLayer.Customer GetCustomerByID(int customerID) {
            return base.Channel.GetCustomerByID(customerID);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByIDAsync(int customerID) {
            return base.Channel.GetCustomerByIDAsync(customerID);
        }
        
        public ServerProject.DatabaseLayer.Customer CustomerLogin(string userMail, string passWord) {
            return base.Channel.CustomerLogin(userMail, passWord);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> CustomerLoginAsync(string userMail, string passWord) {
            return base.Channel.CustomerLoginAsync(userMail, passWord);
        }
        
        public void MakeScheduler(System.DateTime date, System.TimeSpan time, int movieID, int hallID) {
            base.Channel.MakeScheduler(date, time, movieID, hallID);
        }
        
        public System.Threading.Tasks.Task MakeSchedulerAsync(System.DateTime date, System.TimeSpan time, int movieID, int hallID) {
            return base.Channel.MakeSchedulerAsync(date, time, movieID, hallID);
        }
        
        public ServerProject.DatabaseLayer.Movie FindMovieByName(string name) {
            return base.Channel.FindMovieByName(name);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Movie> FindMovieByNameAsync(string name) {
            return base.Channel.FindMovieByNameAsync(name);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetSchedulerListByMovieID(int movieID) {
            return base.Channel.GetSchedulerListByMovieID(movieID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetSchedulerListByMovieIDAsync(int movieID) {
            return base.Channel.GetSchedulerListByMovieIDAsync(movieID);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<int>> GetAllAvailableSeats(int schID) {
            return base.Channel.GetAllAvailableSeats(schID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.Collections.Generic.List<int>>> GetAllAvailableSeatsAsync(int schID) {
            return base.Channel.GetAllAvailableSeatsAsync(schID);
        }
        
        public ServerProject.DatabaseLayer.Customer GetCustomerByPhone(string phone) {
            return base.Channel.GetCustomerByPhone(phone);
        }
        
        public System.Threading.Tasks.Task<ServerProject.DatabaseLayer.Customer> GetCustomerByPhoneAsync(string phone) {
            return base.Channel.GetCustomerByPhoneAsync(phone);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation> GetResByCusPhone(string phone) {
            return base.Channel.GetResByCusPhone(phone);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Reservation>> GetResByCusPhoneAsync(string phone) {
            return base.Channel.GetResByCusPhoneAsync(phone);
        }
        
        public void DeleteCustomer(int id) {
            base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(int id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler> GetSchListByDate(System.DateTime date) {
            return base.Channel.GetSchListByDate(date);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServerProject.DatabaseLayer.Scheduler>> GetSchListByDateAsync(System.DateTime date) {
            return base.Channel.GetSchListByDateAsync(date);
        }
        
        public void UpdateScheduler(int schID, System.DateTime date, System.TimeSpan time, int movieID, int hallID) {
            base.Channel.UpdateScheduler(schID, date, time, movieID, hallID);
        }
        
        public System.Threading.Tasks.Task UpdateSchedulerAsync(int schID, System.DateTime date, System.TimeSpan time, int movieID, int hallID) {
            return base.Channel.UpdateSchedulerAsync(schID, date, time, movieID, hallID);
        }
        
        public void UpdateCustomer(int customerID, string name, string email, string phone, string password) {
            base.Channel.UpdateCustomer(customerID, name, email, phone, password);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(int customerID, string name, string email, string phone, string password) {
            return base.Channel.UpdateCustomerAsync(customerID, name, email, phone, password);
        }
        
        public void DeleteSch(int schID) {
            base.Channel.DeleteSch(schID);
        }
        
        public System.Threading.Tasks.Task DeleteSchAsync(int schID) {
            return base.Channel.DeleteSchAsync(schID);
        }
    }
}
